sil_stage canonical

import Builtin
import Swift
import SwiftShims

public class C {
  @objc deinit
  init()
}

// test_atomic_to_nonatomic_retain
sil @test_atomic_to_nonatomic_retain : $@convention(thin) () -> @owned C {
bb0:
  %0 = alloc_ref $C                               // users: %2, %1
  strong_retain [nonatomic] %0 : $C               // id: %1
  return %0 : $C                                  // id: %2
} // end sil function 'test_atomic_to_nonatomic_retain'

// test_atomic_to_nonatomic_release
sil @test_atomic_to_nonatomic_release : $@convention(thin) (C) -> C {
// %0                                             // users: %2, %1
bb0(%0 : $C):
  strong_release [nonatomic] %0 : $C              // id: %1
  return %0 : $C                                  // id: %2
} // end sil function 'test_atomic_to_nonatomic_release'

// C.__deallocating_deinit
sil @_TFC28nonatomic_reference_counting1CD : $@convention(method) (@owned C) -> () {
// %0                                             // user: %1
bb0(%0 : $C):
  dealloc_ref %0 : $C                             // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '_TFC28nonatomic_reference_counting1CD'

sil_vtable C {
  #C.deinit!deallocator.1: @_TFC28nonatomic_reference_counting1CD	// C.__deallocating_deinit
}



